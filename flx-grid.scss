//flex-grid

//helper
@mixin calc($flxclcpr, $flxclcvl) {
	#{$flxclcpr}: -webkit-calc(#{$flxclcvl});
	#{$flxclcpr}: calc(#{$flxclcvl});
}


//grid

//init vars
$flxclm: 	12 		!default; //$flx-max
$flxmr: 	1% 		!default; //$flx-margin(-right if bottom is set)
$flxmb: 	$flxmr	!default; //$flx-margin-bottom 

$flxlstrw-mode: false 	!default; //enable lastrow-mode


//container
@mixin flx-container($flxcntclm: $flxclm, $flxcntmr: $flxmr, $flxcntmb: $flxmb) {
	display: flex;
	flex-wrap: wrap;

	 @if $flxmb == $flxcntmb {
		$flxcntmb: $flxcntmr;
	}

	$flxtmclm: 	$flxcntclm 	!global; 
	$flxtmmr: 	$flxcntmr	!global; 
	$flxtmmb: 	$flxcntmb	!global; 
}

//box
@mixin flx-item($flxwth, $flxtmclm: $flxtmclm, $flxtmmr: $flxtmmr, $flxtmmb: $flxtmmb) {

	@if $flxwth == 'flex' { 		//enable flex-mode
		flex: 1;
	}
	
	@if type-of($flxwth) == number { 
		@if unitless($flxwth) { 	//enable grid-mode
			$flxtmclc: (($flxwth /$flxtmclm) * 100%);
			@include calc(flex-basis, "#{$flxtmclc} - #{$flxtmmr}");	
		} @else { 					//enable hard-mode
			flex-basis: $flxwth;
		}
	}

	@if $flxlstrw-mode { 			//lastrow-mode
		$flxtmclc: (($flxwth /$flxtmclm) * 100%);
		$flxtmspc: ((($flxtmclm - $flxwth) / $flxtmclm ) * $flxtmmr);

		@include calc(flex-basis, "#{$flxtmclc} - #{$flxtmspc}");	
	}
	
	margin: 0 $flxtmmr $flxtmmb 0;

	@if $flxwth == 0 {
		margin: 0;
		display: none;
		visibility: hidden;
	}
}