//flx-grid.scss

//helper
@mixin calc($flxclcpr, $flxclcvl) {
	#{$flxclcpr}: -webkit-calc(#{$flxclcvl});
	#{$flxclcpr}: calc(#{$flxclcvl});
}


//grid

//default values
$flxclm: 	     12 	!default; //flx-grid-units
$flxmx: 	     1% 	!default; //flx-margin(-x if y is defined)
$flxmy: 	     $flxmx	!default; //flx-margin-y 

$flxst-mode: 	free 	!default; //modes "free" and "last"


@mixin flx-settings($flxst-mode: $flxst-mode) {
	$flxst-mode: $flxst-mode !global;
}

//container
@mixin flx-container($flxcntclm: $flxclm, $flxcntmx: $flxmx, $flxcntmy: $flxmy) {
	display: flex;
	flex-wrap: wrap;
	box-sizing: border-box;

	 @if $flxmy == $flxcntmy {
		$flxcntmy: $flxcntmx;
	}

	$flxtmclm: 	$flxcntclm 	!global; 
	$flxtmmx: 	$flxcntmx	!global; 
	$flxtmmy: 	$flxcntmy	!global; 
}

//box
@mixin flx-item($flxwth, $flxtmclm: $flxtmclm, $flxtmmx: $flxtmmx, $flxtmmy: $flxtmmy) {
	
	@if $flxtmmx == 0 {
		$flxtmmx: 0px;
	}

	@if $flxwth == 0 {
		margin: 0;
		display: none;
	}

	@if $flxwth == 'flex' { // flex-item
		flex: 1;
	}
	
	@if type-of($flxwth) == number { 

		@if $flxst-mode == "free" {
			@if unitless($flxwth) { // grid-mode
				$flxtmclc: (($flxwth /$flxtmclm) * 100%);
				@include calc(flex-basis, "#{$flxtmclc} - #{$flxtmmx}");	
			} @else { // hard-item
				flex-basis: $flxwth;
			}
		}

		@else if $flxst-mode == "last" { // last-mode
			$flxtmclc: (($flxwth /$flxtmclm) * 100%);
			$flxtmspc: ((($flxtmclm - $flxwth) / $flxtmclm ) * $flxtmmx);
			@include calc(flex-basis, "#{$flxtmclc} - #{$flxtmspc}");	
		} @else {
			@error "mode not defined";
		}
	}

	margin: 0 $flxtmmx $flxtmmy 0;
}

//last item
@mixin flx-last($flxlst: null) {
	@if $flxst-mode == "last" {
		@if $flxlst not null {
			&:nth-child($flx-test) {
			margin-right: 0;
			}
		} @else {
			margin-right: 0;
		}
	} @else {
		@error "wrong mode";
	}
}

//shift - draft
@mixin flx-shift($flxshf) {
	$flxtmclc: (($flxshf /$flxtmclm) * 100%);
	margin-left: $flxtmclc;
}